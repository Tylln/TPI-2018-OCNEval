package ch.ocn.OCNEval;

import java.sql.SQLException;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.google.gson.Gson;

import ch.ocn.OCNEval.data.Section;
import ch.ocn.OCNEval.sql.SqlRequest;

//Si l'URL est webapi/sections, cette classe sera utilisée
@Path("sections")
public class SectionResource {
	
	//Constructeur par défaut
	public SectionResource() {
		
	}
	
	//Méthode permettant de récupérer toutes les sections de la BDD
	//Cette méthode sera exécutée en cas de méthode GET et produit un fichier JSON
	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response getSectionsJson() throws SQLException {
		String request = "SELECT * FROM section WHERE valid='1';"; //Création de la requête SQL
		
		//Renvoie une réponse HTTP contenant la liste des sections
		return Response.status(Response.Status.OK).entity(SqlRequest.requestSections(request)).build(); 
	}
	
	//Méthode permettant de récupérer une section particulière de la BDD
	//Cette méthode sera exécutée en cas de méthode GET lorsque l'URL est webapi/sections/[id de la section] et produit un fichier JSON
	@GET
	@Path("{sectionId}")
	@Produces(MediaType.APPLICATION_JSON)
	public Response getSectionJson(@PathParam("sectionId") String sectionId) throws SQLException {
		String request = "SELECT * FROM section WHERE id='" + sectionId + "' AND valid = '1';"; //Création de la requête SQL
		
		//Renvoie une réponse HTTP contenant les informations de la section
		return Response.status(Response.Status.OK).entity(SqlRequest.requestSection(request)).build();
	}
	
	//Méthode permettant de modifier une section
	////Cette méthode sera exécutée lorsque l'URL est webapi/sections/[id de la section] et produit un fichier JSON
	@PUT
	@Path("{sectionId}")
	@Consumes(MediaType.APPLICATION_JSON)
	public Response modifySection(@PathParam("sectionId") String sectionId, String sectionJson) throws SQLException {
		Gson gson = new Gson();
		Section section = gson.fromJson(sectionJson, Section.class);
		if (section.getValidityDate().equals("")) {
			section.setValidityDate("NULL");
		} else {
			section.setValidityDate("'" + section.getValidityDate() + "'");
		}
		String request = "UPDATE section SET name = '" + section.getName() + "', description = '" + section.getDescription() + "', path = '" + section.getPath() + "', validity_date = " + section.getValidityDate() + " WHERE id = '" + sectionId + "';";
		SqlRequest.modifySection(request);
		
		return Response.status(200).build();
	}
	
	@DELETE
	@Path("{sectionId}")
	public Response deleteSection(@PathParam("sectionId") String sectionId) throws SQLException {
		String request = "UPDATE section SET valid = '0' WHERE id ='" + sectionId + "';";
		SqlRequest.deleteSection(request);
		
		return Response.status(200).build();
	}
	
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	public Response addSection(String sectionJson) throws SQLException {
		Gson gson = new Gson();
		Section section = gson.fromJson(sectionJson, Section.class);
		if (section.getValidityDate().equals("")) {
			section.setValidityDate("NULL");
		} else {
			section.setValidityDate("'" + section.getValidityDate() + "'");
		}
		String request = "INSERT INTO section VALUES (NULL, '" + section.getName() + "', '" + section.getDescription() + "', '" + section.getPath() + "', "+ section.getValidityDate() + ", 1);";
		SqlRequest.addSection(request);
		
		return Response.status(200).build();
	}
	
	@POST
	@Path("{profileId}")
	public Response addSectionToProfile(@PathParam("profileId") String profileId, String sectionNameJson) throws SQLException {
		Gson gson = new Gson();
		Section section = gson.fromJson(sectionNameJson, Section.class);
		String requestSectionId = "SELECT * FROM section WHERE name='" + section.getName() + "';";
		Section section2 = SqlRequest.requestSection(requestSectionId);
		String requestBind = "INSERT INTO profile_section_junction VALUES(" + profileId + ", " + section2.getId() + ");"; 
		SqlRequest.bindSectionToProfile(requestBind);
		
		return Response.status(200).build();
	}
}
