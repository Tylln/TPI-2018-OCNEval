package ch.ocn.OCNEval.controler;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;

import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.itextpdf.io.font.FontConstants;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfReader;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.kernel.utils.PdfMerger;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.ListItem;
import com.itextpdf.layout.element.Paragraph;

import ch.ocn.OCNEval.data.Person;
import ch.ocn.OCNEval.data.Profile;
import ch.ocn.OCNEval.data.Section;
import ch.ocn.OCNEval.sql.SqlRequest;

public class Pdf {
	public Pdf() {
		
	}
	
	public static void generate(String infos) throws SQLException, IOException {
		System.out.println(infos);
		Person person = getInfosPerson(infos);
		List<Section> sections = getInfosProfile(infos).getSections();
		/*String dest = "U:\\test.pdf";
		
		PdfDocument pdf = new PdfDocument(new PdfWriter(dest));
		PdfMerger merger = new PdfMerger(pdf);
		//Add pages from the first document
		for (int i = 0; i < sections.size(); i++) {
			PdfDocument sourcePdf = new PdfDocument(new PdfReader(sections.get(i).getPath()));
			merger.merge(sourcePdf, 1, sourcePdf.getNumberOfPages());
			sourcePdf.close();
		}
		// merge and close
		merger.close();
		pdf.close();*/
	}
	
	public static Person getInfosPerson(String infos) throws SQLException {
		JsonObject infosJson = new Gson().fromJson(infos, JsonObject.class);
		String request = "SELECT * FROM person WHERE firstname =" + infosJson.get("firstname").toString() + ";";
		Person person = SqlRequest.requestPerson(request);
		
		return person;
	}
	
	public static Profile getInfosProfile(String infos) throws SQLException {
		JsonObject infosJson = new Gson().fromJson(infos, JsonObject.class);
		String request = "SELECT id FROM profile WHERE name =" + infosJson.get("name").toString() + ";";
		int profileId = SqlRequest.requestIdProfile(request);
		
		String requestProfile = "SELECT * FROM profile WHERE id='" + profileId + "' AND valid = '1';";
		String requestSections = "SELECT section.* FROM section, profile_section_junction WHERE profile_section_junction.profile_id='" + profileId + "'AND section.id = profile_section_junction.section_id AND section.valid = '1';"; ;
		Profile profile = SqlRequest.requestProfile(requestProfile, requestSections);
	
		return profile;
	}
}
